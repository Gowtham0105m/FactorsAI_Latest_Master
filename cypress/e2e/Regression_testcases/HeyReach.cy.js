import { APIKEY, deviceViewport, Timeout } from '../Utils.js';
import envDetails from '../../fixtures/envDetails.json';
import methods from '../../support/Common_Method.js';
import locators from '../../support/Locators.js';
import dayjs from 'dayjs';
import Login1 from '../PageObjects/Login1.js';


describe('WorkFlow - HeyReach Login', () => {

    beforeEach(() => {

        cy.viewport(deviceViewport);

        cy.on('uncaught:exception', (err, runnable) => {
            return false;
        });

        //login before run test
        Login1();

    })

    it('WorkFlow - HeyReach - List', () => {

        const nowTime = dayjs().format('H:m:s');
        const testName = `Demo HeyReach List_${nowTime}`;
        const IntegrateName = "Configuration for HeyReach";


        cy.wait(Timeout.md)
        methods.assertElementContainsTextxpath(locators.Account_Pagetitle, 'All Accounts')
        cy.visit(`${envDetails.backendApiUrl}/automations/workflows`)
        cy.wait(Timeout.sm)
        methods.assertElementContainsTextxpath(locators.workflows_Title, 'Workflows')
        cy.wait(Timeout.xs)
        methods.VisibilityofElementXpath(locators.account_pageloaded)
        methods.ElementToBeClickableXpath(locators.workflow)
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(locators.workflow)
        methods.clickElementByXPath(locators.HeyReach)
        methods.clickElementByXPath(locators.HeyReach_Template)
        methods.clickElementByXPath(locators.Use_this_template)
        methods.clickElement(locators.workflow_edit_icon)
        methods.ClearAndTypeWithXpath(locators.workflow_name, testName)
        methods.EnterXpath(locators.workflow_name)
        methods.assertElementContainsText1(locators.PerformedEvent, "Performs an event")
        methods.clickElementByXPath(locators.select_event)
        methods.clickElement0(locators.others1, 0)
        methods.clickElementByXPath(locators.pageview_option1)
        methods.clickElementByXPath(locators.Configure_Action)
        cy.wait(Timeout.md)
        methods.ScrollAndClickxpath(locators.adpilot_arrow_left)
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(locators.workflow)
        methods.clickElementByXPath(locators.HeyReach)
        methods.clickElementByXPath(locators.HeyReach_Template)
        methods.clickElementByXPath(locators.Use_this_template)
        methods.clickElement(locators.workflow_edit_icon)
        methods.ClearAndTypeWithXpath(locators.workflow_name, testName)
        methods.EnterXpath(locators.workflow_name)
        methods.assertElementContainsText1(locators.PerformedEvent, "Performs an event")
        methods.clickElementByXPath(locators.select_event)
        methods.clickElement0(locators.others1, 0)
        methods.clickElementByXPath(locators.pageview_option1)
        methods.clickElementByXPath(locators.Configure_Action)
        cy.wait(Timeout.md)
        methods.assertElementContainsTextxpath(`(//h4[text()="${IntegrateName}"]//following::h4)[1]`, "Connected")
        cy.wait(Timeout.xs)
        methods.NotExist(locators.HeyReach_lead_list_Load)
        methods.clickElement(locators.hey_reach_list_id)
        methods.VisibilityofElement(locators.Slack_Channel_List)
        methods.clickElement(locators.TestList)
        methods.typeElement(locators.API_Input, APIKEY)
        methods.typeElement(locators.person_titles, "Testing")
        methods.typeElement(locators.person_seniorities, "Testing")
        methods.typeElement(locators.Apollo_Person_locations, "India")
        methods.typeElement(locators.max_contacts, "10")
        methods.clickElementByXPath(locators.SaveandPublish)
        methods.GetText(locators.notification_popup, "Workflow SavedNew workflow is created and saved successfully.")
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(`//h4[text()='${testName}']`)
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(locators.Add_a_Filter)
        methods.clickElement0(locators.others, 0)
        methods.typeElementByXPath(locators.Search_Input, "Iso c")
        cy.wait(Timeout.sm)
        methods.clickElement(locators.IsoCode)
        methods.clickElement(locators.equals_1)
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(locators.pageview_option1)
        methods.clickElementByXPath(locators.Apply1)
        cy.wait(Timeout.xs)
        methods.clickElementByXPath(locators.SaveandPublish)
        methods.GetText(locators.notification_popup, "Workflow UpdatedWorkflow is updated and saved successfully.")
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(`//h4[text()='${testName}']//following::button[2]`)
        methods.clickElementByXPath(locators.Remove_workflow)
        cy.wait(Timeout.xs)
        methods.clickElementByXPath(locators.Ok)
        methods.GetText(locators.notification_popup, "SuccessDeleted Workflow successfully")
        cy.wait(Timeout.xs)
    })

    it.only('WorkFlow - HeyReach - Campaign', () => {

        const nowTime = dayjs().format('H:m:s');
        const testName = `Demo HeyReach Campaign_${nowTime}`;
        const IntegrateName = "Configuration for HeyReach";

        cy.wait(Timeout.md)
        methods.assertElementContainsTextxpath(locators.Account_Pagetitle, 'All Accounts')
        cy.visit(`${envDetails.backendApiUrl}/automations/workflows`)
        cy.wait(Timeout.sm)
        methods.assertElementContainsTextxpath(locators.workflows_Title, 'Workflows')
        cy.wait(Timeout.xs)
        methods.VisibilityofElementXpath(locators.account_pageloaded)
        methods.ElementToBeClickableXpath(locators.workflow)
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(locators.workflow)
        methods.clickElementByXPath(locators.HeyReach)
        methods.clickElementByXPath(locators.Heyreach_campaign)
        methods.clickElementByXPath(locators.Use_this_template)
        methods.clickElement(locators.workflow_edit_icon)
        methods.ClearAndTypeWithXpath(locators.workflow_name, testName)
        methods.EnterXpath(locators.workflow_name)
        methods.assertElementContainsText1(locators.PerformedEvent, "Performs an event")
        methods.clickElementByXPath(locators.select_event)
        methods.clickElement0(locators.others1, 0)
        methods.clickElementByXPath(locators.pageview_option1)
        methods.clickElementByXPath(locators.Configure_Action)
        cy.wait(Timeout.md)
        methods.ScrollAndClickxpath(locators.adpilot_arrow_left)
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(locators.workflow)
        methods.clickElementByXPath(locators.HeyReach)
        methods.clickElementByXPath(locators.Heyreach_campaign)
        methods.clickElementByXPath(locators.Use_this_template)
        methods.clickElement(locators.workflow_edit_icon)
        methods.ClearAndTypeWithXpath(locators.workflow_name, testName)
        methods.EnterXpath(locators.workflow_name)
        methods.assertElementContainsText1(locators.PerformedEvent, "Performs an event")
        methods.clickElementByXPath(locators.select_event)
        methods.clickElement0(locators.others1, 0)
        methods.clickElementByXPath(locators.pageview_option1)
        methods.clickElementByXPath(locators.Configure_Action)
        cy.wait(Timeout.md)
        methods.assertElementContainsTextxpath(`(//h4[text()="${IntegrateName}"]//following::h4)[1]`, "Connected")
        cy.wait(Timeout.sm)
        methods.NotExist(locators.HeyReach_lead_list_Load)
        methods.clickElement(locators.hey_reach_campaign_id)
        methods.VisibilityofElement(locators.Slack_Channel_List)
        methods.clickElement(locators.TestCampaign)
        methods.clickElement(locators.hey_reach_sender_id)
        methods.clickElement(locators.senderID)
        methods.typeElement(locators.API_Input, APIKEY)
        methods.typeElement(locators.person_titles, "Testing")
        methods.typeElement(locators.person_seniorities, "Testing")
        methods.typeElement(locators.Apollo_Person_locations, "India")
        methods.typeElement(locators.max_contacts, "10")
        methods.clickElementByXPath(locators.SaveandPublish)
        methods.GetText(locators.notification_popup, "Workflow SavedNew workflow is created and saved successfully.")
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(`//h4[text()='${testName}']`)
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(locators.Add_a_Filter)
        methods.clickElement0(locators.others, 0)
        methods.typeElementByXPath(locators.Search_Input, "Iso c")
        cy.wait(Timeout.sm)
        methods.clickElement(locators.IsoCode)
        methods.clickElement(locators.equals_1)
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(locators.pageview_option1)
        methods.clickElementByXPath(locators.Apply1)
        cy.wait(Timeout.xs)
        methods.clickElementByXPath(locators.SaveandPublish)
        methods.GetText(locators.notification_popup, "Workflow UpdatedWorkflow is updated and saved successfully.")
        cy.wait(Timeout.sm)
        methods.clickElementByXPath(`//h4[text()='${testName}']//following::button[2]`)
        methods.clickElementByXPath(locators.Remove_workflow)
        cy.wait(Timeout.xs)
        methods.clickElementByXPath(locators.Ok)
        methods.GetText(locators.notification_popup, "SuccessDeleted Workflow successfully")
        cy.wait(Timeout.xs)
    })
})